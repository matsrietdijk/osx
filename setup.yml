---
- name: OSX setup
  hosts: local
  connection: local
  vars:
  - user_home: "/Users/{{ ansible_user }}"
  vars_prompt:
  - prompt: What is your Git username?
    name: git_name
    private: no
  - prompt: What is your Git e-mail address?
    name: git_email
    private: no

  tasks:

  - name: Create Homebrew folders
    become: yes
    file:
      path: "/usr/local/{{ item }}"
      owner: "{{ ansible_user }}"
      group: admin
      state: directory
      mode: g+rwx
    with_items:
    - Cellar
    - Frameworks
    - etc
    - include
    - lib
    - opt
    - sbin
    - share

  - name: Create Homebrew zsh folders
    become: yes
    file:
      path: "/usr/local/share/{{ item }}"
      owner: "{{ ansible_user }}"
      group: admin
      state: directory
      mode: 755
    with_items:
    - zsh
    - zsh/site-functions

  - name: Create Homebrew user folders
    become: yes
    file:
      path: "{{ user_home }}/Library/Caches/Homebrew"
      owner: "{{ ansible_user }}"
      state: directory
      mode: g+rwx

  - name: Clone Homebrew
    become: yes
    register: clone_brew
    git:
      repo: https://github.com/Homebrew/brew
      dest: /usr/local/Homebrew

  - name: Set Homebrew repo owner
    become: yes
    file:
      path: /usr/local/Homebrew
      recurse: yes
      owner: "{{ ansible_user }}"
      group: admin
    when: clone_brew|changed

  - name: Link brew command
    file:
      src: /usr/local/Homebrew/bin/brew
      dest: /usr/local/bin/brew
      state: link

  - name: Update Homebrew
    homebrew:
      update_homebrew: yes

  - name: Enable Homebrew taps
    homebrew_tap:
      name: "{{ item }}"
    with_items:
    - caskroom/fonts
    - homebrew/dupes
    - homebrew/versions
    - homebrew/homebrew-php

  - name: Install packages
    homebrew:
      name: "{{ item }}"
      state: present
    with_items:
    - fish
    - dockutil
    - node
    - yarn
    - hub
    - git
    - php71
    - composer
    - mariadb
    - postgresql
    - nginx
    - tree
    - ag
    - jenv
    - wp-cli
    #- android-sdk

  - name: Install applications
    homebrew_cask:
      name: "{{ item }}"
      state: present
    with_items:
    - iterm2
    - slack
    - keepingyouawake
    - spectacle
    - postico
    - sequel-pro
    - spotify
    - font-source-code-pro-for-powerline
    - java
    - skype
    - toggldesktop

  - name: Link homebrew apps
    command: brew linkapps

  - name: Add fish to standard shells
    become: yes
    lineinfile:
      dest: /etc/shells
      line: /usr/local/bin/fish

  - name: Set fish as user shell
    become: yes
    user:
      name: "{{ ansible_user }}"
      shell: /usr/local/bin/fish

  - name: Create private git config
    lineinfile:
      dest: "{{ user_home }}/.gitconfig_private"
      create: yes
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      insertafter: "{{ item.after }}"
    with_items:
    - line: "[user]"
      regexp: ^\[user\]
      after:
    - line: "email = {{ git_email }}"
      regexp: ^email ?=
      after: ^\[user\]
    - line: "name = {{ git_name }}"
      regexp: ^name ?=
      after: ^\[user\]

  - name: Create dot folders
    file:
      path: "{{ user_home }}/{{ item }}"
      state: directory
    with_items:
    - .vim
    - .vim/colors
    - .config
    - .config/fish
    - .config/fish/functions
    - .jenv
    - .jenv/versions

  - name: Link dot files
    file:
      src: "{{ playbook_dir }}/files/{{ item }}"
      dest: "{{ user_home }}/{{ item }}"
      state: link
    with_items:
    - .tmux.conf
    - .vimrc
    - .vim/colors/monokai.vim
    - .config/fish/config.fish
    - .config/fish/brew_keg_only_links.fish
    - .config/fish/vars.fish
    - .config/fish/functions/fish_greeting.fish
    - .config/fish/functions/fish_prompt_powerline.fish
    - .config/fish/functions/fish_prompt_simple.fish
    - .config/fish/functions/fish_right_prompt_powerline.fish
    - .config/fish/functions/fish_right_prompt_simple.fish
    - .config/fish/functions/jenv.fish
    - .gitignore
    - .gitconfig

  - name: Install global Node packages
    npm:
      name: "{{ item }}"
      global: yes
    with_items:
    - gulp
    - ionic
    - cordova
    - tern
    - bower
    - grunt

  - name: Check Dock items
    command: "dockutil --find {{ item }}"
    register: dock_items_to_remove
    ignore_errors: yes 
    with_items:
    - Siri
    - Mail
    - Launchpad
    - Contacts
    - Reminders
    - Maps
    - Photos
    - Messages
    - FaceTime
    - iTunes
    - iBooks

  - name: Remove items from Dock
    command: "dockutil --remove {{ item.item }}"
    when: item|succeeded
    with_items: "{{ dock_items_to_remove.results }}"
